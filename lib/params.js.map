{"version":3,"sources":["../src/params.ts"],"names":["params","width","key","parse","value","parseInt","validate","isNaN","height","crop","includes","x","y"],"mappings":";;;;;;;AAAA;;;;AAMA;;;;AAIO,IAAMA,MAAc,GAAG;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,GADA;AAELC,IAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAnB;AAAA,KAFF;AAGLE,IAAAA,QAAQ,EAAE,kBAACF,KAAD;AAAA,aAAW,CAACG,KAAK,CAACH,KAAD,CAAN,IAAiBA,KAAK,IAAI,EAA1B,IAAgCA,KAAK,IAAI,IAApD;AAAA;AAHL,GADqB;AAO5BI,EAAAA,MAAM,EAAE;AACNN,IAAAA,GAAG,EAAE,GADC;AAENC,IAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAnB;AAAA,KAFD;AAGNE,IAAAA,QAAQ,EAAE,kBAACF,KAAD;AAAA,aAAW,CAACG,KAAK,CAACH,KAAD,CAAN,IAAiBA,KAAK,IAAI,EAA1B,IAAgCA,KAAK,IAAI,IAApD;AAAA;AAHJ,GAPoB;AAa5BK,EAAAA,IAAI,EAAE;AACJP,IAAAA,GAAG,EAAE,GADD;AAEJC,IAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,aAAWA,KAAX;AAAA,KAFH;AAGJE,IAAAA,QAAQ,EAAE,kBAACF,KAAD;AAAA,aAAW,CAAC,MAAD,EAAS,MAAT,EAAiBM,QAAjB,CAA0BN,KAA1B,CAAX;AAAA;AAHN,GAbsB;AAmB5BO,EAAAA,CAAC,EAAE;AACDT,IAAAA,GAAG,EAAE,GADJ;AAEDC,IAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAnB;AAAA,KAFN;AAGDE,IAAAA,QAAQ,EAAE,kBAACF,KAAD;AAAA,aAAW,CAACG,KAAK,CAACH,KAAD,CAAjB;AAAA;AAHT,GAnByB;AAyB5BQ,EAAAA,CAAC,EAAE;AACDV,IAAAA,GAAG,EAAE,GADJ;AAEDC,IAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAnB;AAAA,KAFN;AAGDE,IAAAA,QAAQ,EAAE,kBAACF,KAAD;AAAA,aAAW,CAACG,KAAK,CAACH,KAAD,CAAjB;AAAA;AAHT;AAzByB,CAAvB","sourcesContent":["/**\n * Copyright (c) 2020-present Kriasoft | MIT License (https://git.io/JUgVL)\n */\n\nimport type { Param, Params } from \"./types\";\n\n/**\n * The list of supported image transformation options including parsing and\n * validation logic.\n */\nexport const params: Params = {\n  width: {\n    key: \"w\",\n    parse: (value) => parseInt(value, 10),\n    validate: (value) => !isNaN(value) && value >= 16 && value <= 3840,\n  } as Param<number>,\n\n  height: {\n    key: \"h\",\n    parse: (value) => parseInt(value, 10),\n    validate: (value) => !isNaN(value) && value >= 16 && value <= 2160,\n  } as Param<number>,\n\n  crop: {\n    key: \"c\",\n    parse: (value) => value,\n    validate: (value) => [\"crop\", \"fill\"].includes(value),\n  } as Param<\"crop\" | \"fill\">,\n\n  x: {\n    key: \"x\",\n    parse: (value) => parseInt(value, 10),\n    validate: (value) => !isNaN(value),\n  } as Param<number>,\n\n  y: {\n    key: \"y\",\n    parse: (value) => parseInt(value, 10),\n    validate: (value) => !isNaN(value),\n  } as Param<number>,\n};\n"],"file":"params.js"}